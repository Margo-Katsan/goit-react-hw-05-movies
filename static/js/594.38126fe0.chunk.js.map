{"version":3,"file":"static/js/594.38126fe0.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/components/MainMovieInfo/MainMovieInfo.module.css?efd0","components/MainMovieInfo/MainMovieInfo.jsx","webpack://react-homework-template/./src/components/AdditionalMovieInfo/AdditionalMovieInfo.module.css?300e","components/AdditionalMovieInfo/AdditionalMovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '7564da9cb4db78373a8a5889a287f543';\nconst LANGUAGE = 'en-US';\n\nexport const fetchTrends = async page => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}&language=${LANGUAGE}&page=${page}`);\n  return response.data;\n}\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}&language=${LANGUAGE}`);\n  return response.data\n}\n\nexport const fetchMovieByQuery = async (movieQuery, page) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${movieQuery}&include_adult=true&language=${LANGUAGE}&page=${page}`);\n  return response.data;\n}\n\nexport const fetchCastByMovieId = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}&language=${LANGUAGE}`);\n  return response.data;\n}\n\nexport const fetchReviewsByMovieId = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}&language=${LANGUAGE}&page=1`);\n  return response.data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainMovieInfo_container__YeMG8\",\"poster\":\"MainMovieInfo_poster__pwe-v\",\"info\":\"MainMovieInfo_info__gKhCM\",\"name\":\"MainMovieInfo_name__FiEVN\",\"desc\":\"MainMovieInfo_desc__19cxD\",\"genresTitle\":\"MainMovieInfo_genresTitle__y4Q7x\",\"genresList\":\"MainMovieInfo_genresList__IuxzK\",\"genreItem\":\"MainMovieInfo_genreItem__R9Avb\"};","import css from \"./MainMovieInfo.module.css\"\n\nexport const MainMovieInfo = ({ imageURL, imageAlt, title, overview, genres }) => {\n  const { container, poster, info, name, desc, genresTitle, genresList, genreItem } = css;\n  \n  return (\n    <div className={container}>\n      <img src={imageURL} alt={imageAlt} width=\"300\" className={poster} />\n      <div className={info}>\n        <h2 className={name}>{title}</h2>\n        <h3 className={desc}>Overview</h3>\n        <p className={genres}>{overview}</p>\n        <h3 className={genresTitle}>Genres</h3>\n        <ul className={genresList}>\n          {genres.map(genre => <li key={genre.id} className={genreItem}><p>{genre.name}</p></li>)}\n        </ul>\n      </div>\n    </div>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AdditionalMovieInfo_list__CcwY7\",\"link\":\"AdditionalMovieInfo_link__e+NPN\"};","import { Suspense } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport { Loading } from \"components/Loading/Loading\";\nimport css from \"./AdditionalMovieInfo.module.css\"\n\nexport const AdditionalMovieInfo = () => {\n  const { container, list, listItem, link } = css;\n  return (\n    <div className={container}>\n      <ul className={list}>\n        <li className={listItem}>\n          <NavLink className={link} to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink className={link} to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loading/>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  )\n}","import { useEffect, useRef, useState } from \"react\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { FaArrowAltCircleLeft } from 'react-icons/fa';\nimport { MainMovieInfo } from \"components/MainMovieInfo/MainMovieInfo\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { AdditionalMovieInfo } from \"components/AdditionalMovieInfo/AdditionalMovieInfo\";\nimport { fetchMovieById } from \"api\";\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n  const [loading, setLoading] = useState(false);\n  const [imageURL, setImageURL] = useState('');\n  const [imageAlt, setImageAlt] = useState('');\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    async function fetchingMovieById() {\n      try {\n        setLoading(true);\n        const fetchedMovieById = await fetchMovieById(params.movieId);\n        setImageURL(`https://image.tmdb.org/t/p/original${fetchedMovieById.poster_path}`);\n        setImageAlt(`${fetchedMovieById.title} poster`);\n        setTitle(`${fetchedMovieById.original_title}`);\n        setOverview(`${fetchedMovieById.overview}`);\n        setGenres(fetchedMovieById.genres);\n        setLoading(false);\n      }\n      catch (error) {\n        toast.error('Oops! Something went wrong!', {\n          position: \"top-center\",\n          theme: \"dark\",\n          hideProgressBar: true,\n        });\n      }\n      \n    }\n    fetchingMovieById();\n  }, [params])\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <FaArrowAltCircleLeft size={40} color=\"#660000\" style={{ marginLeft: \"15px\", marginTop: \"10px\", marginBottom: \"5px\"}} />\n      </Link>\n      {loading && (\n        <Loading />\n      )}\n      <MainMovieInfo imageURL={imageURL} imageAlt={imageAlt} title={title} overview={overview} genres={genres} />\n      <AdditionalMovieInfo />\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default MovieDetails;"],"names":["axios","KEY","LANGUAGE","fetchTrends","page","response","data","fetchMovieById","movieId","fetchMovieByQuery","movieQuery","fetchCastByMovieId","fetchReviewsByMovieId","MainMovieInfo","imageURL","imageAlt","title","overview","genres","container","css","poster","info","name","desc","genresTitle","genresList","genreItem","className","src","alt","width","map","genre","id","AdditionalMovieInfo","list","listItem","link","to","Suspense","fallback","Loading","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","loading","setLoading","setImageURL","setImageAlt","setTitle","setOverview","setGenres","useEffect","fetchedMovieById","poster_path","original_title","toast","position","theme","hideProgressBar","fetchingMovieById","current","size","color","style","marginLeft","marginTop","marginBottom"],"sourceRoot":""}