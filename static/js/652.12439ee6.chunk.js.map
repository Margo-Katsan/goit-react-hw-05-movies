{"version":3,"file":"static/js/652.12439ee6.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/Loading/Loading.jsx","webpack://react-homework-template/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/RatingStars/RatingStars.module.css?1807","components/RatingStars/RatingStars.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '7564da9cb4db78373a8a5889a287f543';\nconst LANGUAGE = 'en-US';\n\nexport const fetchTrends = async page => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}&language=${LANGUAGE}&page=${page}`);\n  return response.data;\n}\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}&language=${LANGUAGE}`);\n  return response.data\n}\n\nexport const fetchMovieByQuery = async (movieQuery, page) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${movieQuery}&include_adult=true&language=${LANGUAGE}&page=${page}`);\n  return response.data;\n}\n\nexport const fetchCastByMovieId = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}&language=${LANGUAGE}`);\n  return response.data;\n}\n\nexport const fetchReviewsByMovieId = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}&language=${LANGUAGE}&page=1`);\n  return response.data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import css from \"./Button.module.css\";\n\nexport const Button = ({ onLoadMore }) => {\n  return <button type=\"button\" onClick={onLoadMore} className={css.button}>Load more</button>\n}","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loading = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#660000\"\n      ariaLabel=\"three-dots-loading\"\n      visible={true}\n      wrapperStyle={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n  />\n)}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieListItem_title__Q3l1Y\",\"poster\":\"MovieListItem_poster__oLpFL\",\"info\":\"MovieListItem_info__kObmM\",\"default\":\"MovieListItem_default__2cBT5\",\"defaultImage\":\"MovieListItem_defaultImage__Zt-y1\"};","import { FaImage } from \"react-icons/fa\";\nimport { RatingStars } from \"components/RatingStars/RatingStars\";\nimport css from \"./MovieListItem.module.css\"\n\nexport const MovieListItem = ({ movieData }) => {\n  const { title, poster_path: imageUrl, vote_average: rating, vote_count: votes } = movieData;\n  \n  return (\n    <>\n      {imageUrl ? (\n        <img className={css.poster} src={`https://image.tmdb.org/t/p/w500/${imageUrl}`} width={200} alt=\"poster\"/>\n      ) : (\n        <div className={css.default}>\n          <FaImage size={150} className={css.defaultImage} />\n        </div>\n      )}\n      <div className={css.info}>\n        <h3 className={css.title}>{title}</h3>\n        <RatingStars rating={rating} votes={votes} />\n      </div>\n    </>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"list\":\"MoviesList_list__0Owr9\",\"link\":\"MoviesList_link__8rTGX\",\"listItem\":\"MoviesList_listItem__LULLo\"};","import { NavLink, useLocation } from \"react-router-dom\";\nimport { MovieListItem } from \"components/MovieListItem/MovieListItem\";\nimport css from \"./MoviesList.module.css\"\n\nexport const MoviesList = ({ moviesList, page }) => {\n  const location = useLocation();\n  \n  return (\n    <div className={css.container}>\n<ul className={css.list}>\n      {moviesList.map(movieItem =>\n        <li className={css.listItem} key={movieItem.id}>\n          {page ===\"/movies\" && (\n            <NavLink className={css.link} to={`${movieItem.id}`} state = {{from: location}}>\n              <MovieListItem movieData={movieItem}/>\n            </NavLink>\n          )}\n          {page === \"/\" && (\n            <NavLink className={css.link} to={`/movies/${movieItem.id}`} state = {{from: location}}>\n              <MovieListItem movieData={movieItem}/>\n            </NavLink>\n          )}\n        </li>)}\n    </ul>\n    </div>\n    \n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RatingStars_container__A2vAx\",\"number\":\"RatingStars_number__6yR8J\",\"votes\":\"RatingStars_votes__KAhEE\"};","import Rating from '@mui/material/Rating';\nimport css from \"./RatingStars.module.css\";\n\nexport const RatingStars = ({ rating, votes }) => {\n  return (\n    <>\n      <div className={css.container}>\n        <Rating name=\"customized-10\" defaultValue={rating} max={10} precision={0.1} readOnly/>\n        <span className={css.number}>{rating.toFixed(1)}</span>\n      </div>\n      {votes && (\n        <span className={css.votes}>({votes})</span>\n      )}\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"form\":\"SearchBar_form__gW7Gj\",\"button\":\"SearchBar_button__T7RTc\",\"icon\":\"SearchBar_icon__EfDZn\",\"input\":\"SearchBar_input__bIy50\"};","import { GiFilmProjector } from \"react-icons/gi\";\nimport css from \"./SearchBar.module.css\"\n\nexport const SearchBar = ({onChangeQuery}) => {\n  return (\n    <div className={css.searchbar}>\n      <form className={css.form} onSubmit={event => {\n        event.preventDefault();\n        onChangeQuery(event.target.elements.query.value);\n        event.target.reset();\n      }}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      <button type=\"submit\" className={css.button}>\n        <GiFilmProjector className={css.icon} size={30} color=\"#660000\"/>\n         \n        </button>\n      </form>\n    </div>\n    \n    \n  )\n}","import { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { Button } from \"components/Button/Button\";\nimport { fetchMovieByQuery } from \"api\";\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const page = searchParams.get('page' ?? 1);\n  const [moviesOnRequest, setMoviesOnRequest] = useState([]);\n  const [loadMoreBtn, setLoadMoreBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  \n\n\n  useEffect(() => {\n    async function fetchingMovieByQuery() {\n      if (query === '') {\n        return;\n      }\n      try {\n        setLoading(true);\n        const fetchedMovieByQuery = await fetchMovieByQuery(query, page);\n        setMoviesOnRequest(prevState => prevState.concat(fetchedMovieByQuery.results));\n        setLoading(false);\n        setLoadMoreBtn(true);\n   \n        if (fetchedMovieByQuery.total_results === 0) {\n\n          toast.warn(\"Sorry, there are no images matching your search query. Please try again.\", {\n            position: \"top-center\",\n            theme: \"dark\",\n            hideProgressBar: true,\n          })\n        }\n        if (fetchedMovieByQuery.results.length === fetchedMovieByQuery.total_results ||\n        fetchedMovieByQuery.total_results === 0) {\n          setLoadMoreBtn(false);\n        }\n      }\n      catch(error) {\n        toast.error('Oops! Something went wrong!');\n      }\n      \n    }\n    fetchingMovieByQuery();\n  }, [query, page]);\n\n  const changeQuery = newQuery => {\n    if (newQuery === \"\") {\n      toast.warn(\"You didn't enter anything into the search engine\", {\n            position: \"top-center\",\n            theme: \"dark\",\n            hideProgressBar: true,\n          });\n      setSearchParams({});\n      setLoadMoreBtn(false);\n    }\n    else {\n      setSearchParams({ query: newQuery, page: 1 });\n    }\n    \n \n    setMoviesOnRequest([]);\n  }\n  const loadMore = () => {\n\n    setSearchParams({query, page: parseInt(page)+1});\n\n  }\n  \n  return (\n    <>\n      <SearchBar onChangeQuery={changeQuery} />\n      {loading && (\n        <Loading />\n      )}\n      <MoviesList moviesList={moviesOnRequest} page={`${location.pathname}`} />\n      {loadMoreBtn && (\n        <Button onLoadMore={loadMore}/>\n      )}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default Movies;"],"names":["axios","KEY","LANGUAGE","fetchTrends","page","response","data","fetchMovieById","movieId","fetchMovieByQuery","movieQuery","fetchCastByMovieId","fetchReviewsByMovieId","Button","onLoadMore","type","onClick","className","css","Loading","height","width","radius","color","ariaLabel","visible","wrapperStyle","display","justifyContent","alignItems","MovieListItem","movieData","title","imageUrl","poster_path","rating","vote_average","votes","vote_count","src","alt","size","RatingStars","MoviesList","moviesList","location","useLocation","map","movieItem","to","id","state","from","Rating","name","defaultValue","max","precision","readOnly","toFixed","SearchBar","onChangeQuery","onSubmit","event","preventDefault","target","elements","query","value","reset","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","get","useState","moviesOnRequest","setMoviesOnRequest","loadMoreBtn","setLoadMoreBtn","loading","setLoading","useEffect","fetchedMovieByQuery","prevState","concat","results","total_results","toast","position","theme","hideProgressBar","length","fetchingMovieByQuery","newQuery","pathname","parseInt"],"sourceRoot":""}